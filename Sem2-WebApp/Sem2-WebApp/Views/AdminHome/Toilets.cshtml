@{
    ViewData["Title"] = "Toilets";
}

@section Styles {
    <style>
        .tabsDynamicHeight md-content {
            background-color: transparent !important;
        }

        .tabsDynamicHeight md-content md-tabs {
            background: #f6f6f6;
        }

        .tabsDynamicHeight md-content md-tabs md-tabs-wrapper {
            background: white;
        }

        .dataTables_wrapper {
            display: block !important;
        }

        div.DTED_Lightbox_Background {
            z-index: 1038 !important;
        }

        div.DTED_Lightbox_Wrapper {
            z-index: 1039 !important;
        }

        div.DTE button.btn, div.DTE div.DTE_Form_Buttons button {
            padding: 0 1.6rem !important;
        }

        div.dt-button-info {
            z-index: 1011 !important;
        }

        .ab-wf-k-Sl {
            font-weight: bold;
            margin-top: 1em;
        }

        md-input-container > label {
            margin-bottom: 0;
        }

        md-toast {
            z-index: 1022;
        }

        @@media (min-width: 960px) {
            md-toast.md-left {
                left: 18px;
            }
        }

        @@media (min-width: 960px) {
            md-toast.md-bottom {
                bottom: 18px;
            }
        }
    </style>
}

<div class="doc data-table-doc page-layout simple full-width">
    <!-- Header -->
    <div class="page-header bg-primary text-auto p-6 row no-gutters align-items-center justify-content-between" ng-controller="AssignCleanerController">
        <h1 class="doc-title h4" id="content"></h1>
        <md-button class="md-raised" ng-click="assignCleaner($event)">Assign cleaner</md-button>
    </div>

    <!-- Content -->
    <div ng-controller="TabsController" class="tabsDynamicHeight">
        <md-content>
            <md-tabs md-selected="selectedIndex" md-dynamic-height md-border-bottom>
                <md-tab label="toilets">
                    <div class="page-content p-6">
                        <div class="content">
                            <div class="row">
                                <div class="col-12" style="margin-bottom: 1.8rem">
                                    <p>
                                        <button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseFilterToilets" aria-expanded="false"
                                                aria-controls="collapseFilterToilets">
                                            <i class="fa icon-magnify left"></i> Filter toilets
                                        </button>
                                    </p>

                                    <p>
                                        <button class="js-push-btn btn btn-secondary" type="button">Enable Push Messaging</button>
                                    </p>

                                    <div class="collapse" id="collapseFilterToilets">
                                        <section class="section">
                                            <div class="row">
                                                <div class="col-md-8">
                                                    <div class="card">
                                                        <div class="card-block" style="padding: 1.6rem">
                                                            <div class="row">
                                                                <div class="col-md-6" data-column="1">
                                                                    <div class="form-group">
                                                                        <input type="text" id="name" class="form-control" />
                                                                        <label for="name">Name</label>
                                                                    </div>
                                                                </div>

                                                                <div class="col-md-6" data-column="2">
                                                                    <div class="form-group">
                                                                        <input type="text" id="gender" class="form-control" />
                                                                        <label for="gender">Gender</label>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-md-6" data-column="3">
                                                                    <div class="form-group">
                                                                        <input type="text" id="fanThreshold" class="form-control" />
                                                                        <label for="fanThreshold">Fan threshold</label>
                                                                    </div>
                                                                </div>

                                                                <div class="col-md-6" data-column="4">
                                                                    <div class="form-group">
                                                                        <input type="text" id="comments" class="form-control" />
                                                                        <label for="comments">Comments</label>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <div class="row">
                                                                <div class="col-md-12 text-center">
                                                                    <button id="btnResetFilters" class="btn btn-primary waves-effect waves-light" type="button">Reset filters</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </section>
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-block" style="padding: 1.6rem;">
                                            <table id="tblToilets" class="table table-hover table-responsive-md">
                                                <thead>
                                                    <tr>
                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">ID</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Name</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Gender</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Last Cleaned</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Comments</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Actions</span>
                                                            </div>
                                                        </th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </md-tab>

                <md-tab label="logs">
                    <div class="page-content p-6">
                        <div class="content">
                            <div class="row">
                                <div layout-gt-xs="row" style="margin-bottom: 1.8rem" ng-controller="DatepickerController as ctrl">
                                    <div flex-gt-xs>
                                        <md-datepicker id="from" ng-model="ctrl.from" md-placeholder="From" md-max-date="ctrl.today" ng-change="filterDateRange()" md-open-on-focus></md-datepicker>
                                    </div>
                                            
                                    <div flex-gt-xs>
                                        <md-datepicker id="to" ng-model="ctrl.to" md-placeholder="To" md-max-date="ctrl.today" ng-change="filterDateRange()" md-open-on-focus></md-datepicker>
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="card">
                                        <div class="card-block" style="padding: 1.6rem;">
                                            <table id="tblToiletLogs" class="table table-hover table-responsive-md">
                                                <thead>
                                                    <tr>
                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">ID</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Toilet ID</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Cleaner</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Start Date</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">End Date</span>
                                                            </div>
                                                        </th>

                                                        <th class="secondary-text">
                                                            <div class="table-header">
                                                                <span class="column-title">Duration</span>
                                                            </div>
                                                        </th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </md-tab>
            </md-tabs>
        </md-content>
    </div>
</div>

@section Scripts {
    <script src="~/resources/assets/libs/moment/min/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-duration-format/2.2.2/moment-duration-format.min.js" integrity="sha256-bXC/nhRjq/J7K4hnL8yvthqXkskSKOsZNfrLgXBigYg=" crossorigin="anonymous"></script>
    <script>
        $.fn.dataTable.ext.search.push(
            function (settings, data, dataIndex) {
                if (settings.nTable.id !== "tblToiletLogs") {
                    return true;
                }

                const from = $("#from").scope().ctrl.from;
                const to = $("#to").scope().ctrl.to;
                const startDate = new Date(data[3]);

                if (from == null && to == null) {
                    return true;
                }
                if (from == null && moment(startDate).isSameOrBefore(to, 'day')) {
                    return true;
                }
                if (to == null && moment(startDate).isSameOrAfter(from, 'day')) {
                    return true;
                }
                if (moment(startDate).isSameOrBefore(to, 'day') && moment(startDate).isSameOrAfter(from, 'day')) {
                    return true;
                }
                return false;
            }
        );

        connection.on("ReloadTable", () => {
            toiletsTable.ajax.reload(function() {
                const selectedIndex = $('[ng-controller="TabsController"]').scope().selectedIndex;
                if (selectedIndex === 0) {
                    $("#content").text(`Total toilets: ${toiletsTable.data().count()}`);
                }
            });

            toiletLogsTable.ajax.reload(function() {
                const selectedIndex = $('[ng-controller="TabsController"]').scope().selectedIndex;
                if (selectedIndex === 1) {
                    $("#content").text(`Total toilet logs: ${toiletLogsTable.data().count()}`);
                }
            }, false);
        });

        var editor;
        var toiletsTable;
        var toiletLogsTable;

        $(document).ready(function() {
            editor = new $.fn.dataTable.Editor({
                ajax: "/api/Toilets",
                table: "#tblToilets",
                fields: [{
                        label: "Toilet name:",
                        name: "ToiletName"
                    }, {
                        label: "Toilet gender:",
                        name: "ToiletGender",
                        type: "select",
                        options: [
                            "Female",
                            "Male"
                        ]
                    }, {
                        label: "Comments:",
                        name: "Comments"
                    }
                ],
                i18n: {
                    create: {
                        title: "Add a new toilet",
                        submit: "Add"
                    },
                    edit: {
                        title: "Edit toilet details",
                        submit: "Save"
                    },
                    remove: {
                        title: "Delete toilet",
                        submit: "Delete",
                        confirm: {
                            _: "Are you sure you want to delete %d toilets?" +
                                "<div class='ab-wf-k-Sl'>Warning: You can’t undo this action.</div>",
                            1: "Are you sure you want to delete this toilet?" +
                                "<div class='ab-wf-k-Sl'>Warning: You can’t undo this action.</div>"
                        }
                    }
                }
            });

            toiletsTable = $("#tblToilets").DataTable({
                dom: "Bfrtip",
                ajax: "/api/Toilets",
                columns: [
                    { data: "ToiletId" },
                    { data: "ToiletName" },
                    { data: "ToiletGender" },
                    {
                        data: "LastCleaned",
                        render: function(data) {
                            if (!data) {
                                return "Never";
                            } else {
                                return moment.utc(data).local().format("MMM D, YYYY, h:mm:ss A");
                            }
                        }
                    },
                    { data: "Comments" },
                    {
                        data: null,
                        render: function(data) {
                            return `<a href='/AdminHome/Toilets/Settings/${data.ToiletId}' class='btn btn-icon' data-toggle='tooltip' data-placement='bottom' data-trigger='hover' title='Manage settings'><i class='icon icon-pencil s-4'></i></a>`;
                        }
                    }
                ],
                select: true,
                buttons: [
                    { extend: "edit", editor: editor },
                    { extend: "remove", editor: editor }
                ],
                search: {
                    caseInsensitive: false
                },
                language: {
                    emptyTable: "No toilets added"
                },
                initComplete: function() {
                    $(".btn-icon").fuseRipple();
                    $("[data-toggle='tooltip']").tooltip();
                    $("#content").text(`Total toilets: ${toiletsTable.data().count()}`);
                }
            });

            toiletLogsTable = $("#tblToiletLogs").DataTable({
                dom: "Bfrtip",
                ajax: {
                    url: "/api/ToiletLogs",
                    dataSrc: ""
                },
                columns: [
                    { data: "toiletLogId" },
                    { data: "toiletId" },
                    {
                        data: null, render: function (data) {
                            // Combine the first and last names into a single table field.
                            return `${data.firstName} ${data.lastName}`;
                        }
                    },
                    {
                        data: "startDate",
                        render: function(data) {
                            return moment(data).format('MMM D, YYYY, h:mm A');
                        }
                    },
                    {
                        data: "endDate",
                        render: function(data) {
                            if (data) {
                                return moment(data).format('MMM D, YYYY, h:mm A');
                            }
                            return null;
                        }
                    },
                    {
                        data: "duration",
                        render: function(data) {
                            if (data) {
                                return moment.duration(data, 'seconds').format('hh:mm:ss');
                            }
                            return null;
                        }
                    }
                ],
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ],
                search: {
                    caseInsensitive: false
                },
                language: {
                    emptyTable: "No toilet logs available"
                }
            });

            editor.on('submitSuccess', function(e, json, data, action) {
                if (action === "edit") {
                    new PNotify({
                        text: 'Toilet details saved',
                        buttons: {
                            closer: false,
                            sticker: false
                        },
                        animate: {
                            animate: true,
                            in_class: 'slideInUp',
                            out_class: 'slideOutDown'
                        },
                        addclass: 'md stack-bottomleft',
                        delay: 2750
                    });
                } else if (action === "remove") {
                    new PNotify({
                        text: 'Toilet has been deleted',
                        buttons: {
                            closer: false,
                            sticker: false
                        },
                        animate: {
                            animate: true,
                            in_class: 'slideInUp',
                            out_class: 'slideOutDown'
                        },
                        addclass: 'md stack-bottomleft',
                        delay: 2750
                    });
                }
            });

            $("input.form-control").on("keyup click", function() {
                filterColumn($(this).parents().eq(1).attr("data-column"), $(this).attr("id"));
            });

            $("#collapseFilterToilets").on("shown.bs.collapse", function() {
                $("#name").focus();
            });

            $("#btnResetFilters").click(function() {
                $("input:text").each(function() {
                    $(this).val("");

                    if ($(this).hasClass("md-has-value")) {
                        $(this).removeClass("md-has-value");
                    }
                });

                $("#tblToilets").DataTable().search("").columns().search("").draw();
                $("#name").focus();
            });
        });

        function filterColumn(i, id) {
            $("#tblToilets").DataTable().column(i).search(
                $(`#${id}`).val()
            ).draw();
        }

        angular.module('docsApp').controller('AssignCleanerController', ['$scope', '$mdDialog', function($scope, $mdDialog) {
            $scope.assignCleaner = function(ev) {
                $mdDialog.show({
                    templateUrl: "/resources/assets/templates/assign-cleaner-dialog.html",
                    targetEvent: ev,
                    clickOutsideToClose: true,
                    controller: dialogController
                });
            };

            function dialogController($scope, $mdDialog, $timeout, $q, $http, $mdToast) {
                const toiletOwner = "@User.FindFirst("http://schemas.microsoft.com/identity/claims/objectidentifier").Value";

                $http.get(`/api/Toilets/${toiletOwner}`).then(function(response) {
                    $scope.toilets = response.data;
                });

                $scope.cleaner = null;
                $scope.cleaners = null;

                $scope.loadAvailableCleaners = function() {

                    // Use timeout to simulate a 650ms request.
                    return $timeout(function() {
                        $http.get(`/api/Cleaners/${toiletOwner}`).then(function(response) {
                            $scope.cleaners = $scope.cleaners || response.data;
                        });
                    }, 650);
                };

                $scope.assignCleaner = function() {
                    const args = {
                        toilet: $scope.toilet,
                        phoneNumber: $scope.cleaner.phoneNumber
                    };

                    $scope.cleaner.status = 'Busy';

                    $q.all([
                        $http.post('/api/Toilets/SendSms', JSON.stringify(args)),
                        $http.patch(`/api/Cleaners/UpdateCleanerStatus/${$scope.cleaner.cleanerId}`, JSON.stringify($scope.cleaner))
                    ]).then(function () {
                        $mdToast.show(
                            $mdToast.simple()
                            .textContent('Cleaner has been assigned')
                            .position('bottom left')
                            .hideDelay(2750)
                        );

                        $mdDialog.hide();

                        connection.invoke("UpdateTable").catch(err => {
                            console.error(err.toString());
                        });
                    }, function () {
                        $mdToast.show(
                            $mdToast.simple()
                            .textContent('Unable to assign cleaner')
                            .position('bottom left')
                            .hideDelay(2750)
                        );

                        $mdDialog.hide();
                    });
                };

                $scope.hide = function() {
                    $mdDialog.hide();
                };

                $scope.cancel = function() {
                    $mdDialog.cancel();
                };
            }
        }])
        .controller('DatepickerController', ['$scope', function($scope) {
            this.today = new Date();

            $scope.filterDateRange = function() {
                toiletLogsTable.draw();
            };
        }])
        .controller('TabsController', ['$scope', '$log', function($scope, $log) {
            $scope.selectedIndex = 0;
            $scope.$watch('selectedIndex', function (current, old) {
                if (old + 1 === 1 && (old !== current)) {
                    $("#content").text(`Total toilet logs: ${toiletLogsTable.data().count()}`);
                } else if (current + 1 === 1 && (current !== old)) {
                    $("#content").text(`Total toilets: ${toiletsTable.data().count()}`);
                }
            });
        }]);
    </script>
}
